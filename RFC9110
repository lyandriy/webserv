3.4. Mensajes
La respuesta también puede contener campos de encabezado para información del servidor,
metadatos de recursos y metadatos de representación, contenido que se interpretará
de acuerdo con el código de estado y campos finales para comunicar la información
recopilada durante el envío del contenido.
3.9. Ejemplo de intercambio de mensajes
El siguiente ejemplo ilustra un intercambio de mensajes HTTP/1.1 típico para una solicitud GET ( Section 9.3.1 ) en el URI "http://www.example.com/hello.txt": Solicitud de cliente: GET /hello.txt Usuario HTTP/1.1 Agente: curl/7.64.1 Host: www.example.com Idioma aceptado: en, mi Respuesta del servidor: HTTP/1.1 200 OK Fecha: lunes, 27 de julio de 2009 12:28:53 GMT Servidor: Apache Última modificación: miércoles , 22 de julio de 2009 19:15:56 GMT ETag: "34aa387-d-1568eb00" Rangos de aceptación: bytes Longitud del contenido: 51 Variación: Codificación de aceptación Tipo de contenido: texto/sin formato ¡Hola mundo! Mi contenido incluye un CRLF final.
3.4. Mensajes
Un servidor responde a la solicitud de un cliente enviando uno o más mensajes "response" , cada uno de los cuales incluye un código de estado ( Section 15 ).
7.4. Rechazar solicitudes mal dirigidas
Una vez que un servidor recibe una solicitud y la analiza lo suficiente como para determinar su URI de destino, el servidor decide si procesa la solicitud él mismo, reenvía la solicitud a otro servidor, redirige al cliente a un recurso diferente, responde con un error o descarta la solicitud. conexión. Esta decisión puede verse influenciada por cualquier cosa relacionada con la solicitud o el contexto de conexión, pero está dirigida específicamente a si el servidor se ha configurado para procesar solicitudes para ese URI de destino y si el contexto de conexión es apropiado para esa solicitud. Por ejemplo, una solicitud podría haber sido mal dirigida, deliberada o accidentalmente, de modo que la información dentro de un campo de encabezado de Host recibido difiera del host o puerto de la conexión. Si la conexión proviene de una puerta de enlace confiable, se podría esperar tal inconsistencia; de lo contrario, podría indicar un intento de eludir los filtros de seguridad, engañar al servidor para que entregue contenido no público o envenenar un caché. Consulte Section 17 para conocer consideraciones de seguridad relacionadas con el enrutamiento de mensajes. A menos que la conexión sea desde una puerta de enlace confiable, un servidor de origen DEBE rechazar una solicitud si no se cumple algún requisito específico del esquema para el URI de destino. En particular, una solicitud de un recurso "https" DEBE rechazarse a menos que se haya recibido a través de una conexión asegurada mediante un certificado válido para el origen de ese URI de destino, según lo definido por Section 4.2.2 . El código de estado 421 (Solicitud mal dirigida) en una respuesta indica que el servidor de origen rechazó la solicitud porque parece haber sido mal dirigida ( Section 15.5.20 ).
7.5. Correlación de respuesta
Se puede utilizar una conexión para múltiples intercambios de solicitud/respuesta. El mecanismo utilizado para correlacionar entre los mensajes de solicitud y respuesta depende de la versión; Algunas versiones de HTTP utilizan un orden implícito de mensajes, mientras que otras utilizan un identificador explícito. Todas las respuestas, independientemente del código de estado (incluidas las respuestas provisionales), se pueden enviar en cualquier momento después de recibir una solicitud, incluso si la solicitud aún no está completa. Una respuesta puede completarse antes de que se complete su solicitud correspondiente ( Section 6.1 ). Del mismo modo, no se espera que los clientes esperen un período de tiempo específico para recibir una respuesta. Los clientes (incluidos los intermediarios) podrían abandonar una solicitud si la respuesta no se recibe dentro de un período de tiempo razonable. Un cliente que recibe una respuesta mientras todavía está enviando la solicitud asociada DEBE continuar enviando esa solicitud a menos que reciba una indicación explícita en contrario (ver, por ejemplo, Section 9.5 de [ HTTP /1.1] y Section 6.4 de [ HTTP /2]).